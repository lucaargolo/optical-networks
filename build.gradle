plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name+"-"+project.minecraft_version
version = project.mod_version
group = project.maven_group

minecraft {
}


repositories {
    maven {
        name = "Fabric"
        url = "http://maven.fabricmc.net/"
    }
    maven {
        name = "Modmuss50"
        url = "https://maven.modmuss50.me/"
    }
    maven {
        name = "dblsaiko"
        url = "https://maven.dblsaiko.net/"
    }
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    modImplementation "TechReborn:TechReborn-1.16:${project.techreborn_version}"
    modImplementation "io.github.prospector:modmenu:${project.modmenu_version}"
    modImplementation "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"

    modImplementation("grondag:darkness-${project.mc_tag}:${project.darkness_version}.+") { transitive = false }

    modApi ("grondag:frex-${project.mc_tag}:${project.frex_version}.+") { transitive = false }
    modApi ("grondag:jmx-${project.mc_tag}:${project.jmx_version}.+") { transitive = false }

    modApi "teamreborn:energy:${project.energy_version}"
    include "teamreborn:energy:${project.energy_version}"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"